name: Build an image

on:
  workflow_call:
    inputs:
      configuration:
        required: true
        type: string
      registry:
        required: true
        type: string
      repo:
        required: true
        type: string

env:
  REGISTRY: ${{ inputs.registry }}
  REPO: ${{ inputs.repo }}

jobs:
  build:
    permissions:
      contents: read
      packages: write

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Extract configurations
        id: extract-configurations
        run: |
          echo "context=$(cat ${{ inputs.configuration }} | jq -r .context)" >> ${GITHUB_OUTPUT}
          echo "name=$(cat ${{ inputs.configuration }} | jq -r .name)" >> ${GITHUB_OUTPUT}
          echo "tag=$(cat ${{ inputs.configuration }} | jq -r .tag)" >> ${GITHUB_OUTPUT}
          export build_args=$(cat ${{ inputs.configuration }} | jq -r .build_args)
          {
            echo "buildargs<<EOF"
            for key in $(cat ${{ inputs.configuration }} | jq -r '.build_args | keys | .[]'); do
              echo "${key}=$(cat ${{ inputs.configuration }} | jq -r ".build_args.${key}")"
            done
            echo "EOF"
          } >> ${GITHUB_OUTPUT}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: ${{ steps.extract-configurations.outputs.context }}
          file: ${{ steps.extract-configurations.outputs.context }}/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO }}/${{ steps.extract-configurations.outputs.name }}:${{ steps.extract-configurations.outputs.tag }}
          build-args: ${{ steps.extract-configurations.outputs.buildargs }}
          labels: |
            org.opencontainers.image.source="https://github.com/${{ env.REPO }}"
